package customerapp.common.serviceinterface;

import customerapp.common.CustomersViewSDO;

import java.util.List;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.soap.SOAPBinding;

import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import oracle.jbo.common.service.types.FindControl;
import oracle.jbo.common.service.types.FindCriteria;
import oracle.jbo.common.service.types.ProcessControl;
import oracle.jbo.common.service.types.ProcessData;
import oracle.jbo.service.errors.ServiceException;

import oracle.webservices.annotations.PortableWebService;
import oracle.webservices.annotations.SDODatabinding;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Mar 10 22:35:39 IST 2015
// ---------------------------------------------------------------------
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.WRAPPED, style = SOAPBinding.Style.DOCUMENT)
@PortableWebService(targetNamespace="/customerapp/common/", name="CustomerSDOService",
    wsdlLocation="customerapp/common/serviceinterface/CustomerSDOService.wsdl")
@SDODatabinding(schemaLocation="customerapp/common/serviceinterface/CustomerSDOService.xsd")
public interface CustomerSDOService {
    public static final String NAME = "{/customerapp/common/}CustomerSDOService";

    @WebMethod(action="/customerapp/common/getCustomersView1", operationName="getCustomersView1")
    @RequestWrapper(targetNamespace="/customerapp/common/types/", localName="getCustomersView1")
    @ResponseWrapper(targetNamespace="/customerapp/common/types/", localName="getCustomersView1Response")
    @WebResult(name="result")
    CustomersViewSDO getCustomersView1(@WebParam(mode = WebParam.Mode.IN,
            name="customerId")
        String customerId) throws ServiceException;

    @WebMethod(action="/customerapp/common/createCustomersView1",
        operationName="createCustomersView1")
    @RequestWrapper(targetNamespace="/customerapp/common/types/", localName="createCustomersView1")
    @ResponseWrapper(targetNamespace="/customerapp/common/types/", localName="createCustomersView1Response")
    @WebResult(name="result")
    CustomersViewSDO createCustomersView1(@WebParam(mode = WebParam.Mode.IN,
            name="customersView1")
        CustomersViewSDO customersView1) throws ServiceException;

    @WebMethod(action="/customerapp/common/updateCustomersView1",
        operationName="updateCustomersView1")
    @RequestWrapper(targetNamespace="/customerapp/common/types/", localName="updateCustomersView1")
    @ResponseWrapper(targetNamespace="/customerapp/common/types/", localName="updateCustomersView1Response")
    @WebResult(name="result")
    CustomersViewSDO updateCustomersView1(@WebParam(mode = WebParam.Mode.IN,
            name="customersView1")
        CustomersViewSDO customersView1) throws ServiceException;

    @WebMethod(action="/customerapp/common/deleteCustomersView1",
        operationName="deleteCustomersView1")
    @RequestWrapper(targetNamespace="/customerapp/common/types/", localName="deleteCustomersView1")
    @ResponseWrapper(targetNamespace="/customerapp/common/types/", localName="deleteCustomersView1Response")
    void deleteCustomersView1(@WebParam(mode = WebParam.Mode.IN, name="customersView1")
        CustomersViewSDO customersView1) throws ServiceException;

    @WebMethod(action="/customerapp/common/mergeCustomersView1",
        operationName="mergeCustomersView1")
    @RequestWrapper(targetNamespace="/customerapp/common/types/", localName="mergeCustomersView1")
    @ResponseWrapper(targetNamespace="/customerapp/common/types/", localName="mergeCustomersView1Response")
    @WebResult(name="result")
    CustomersViewSDO mergeCustomersView1(@WebParam(mode = WebParam.Mode.IN,
            name="customersView1")
        CustomersViewSDO customersView1) throws ServiceException;

    @WebMethod(action="/customerapp/common/findCustomersView1", operationName="findCustomersView1")
    @RequestWrapper(targetNamespace="/customerapp/common/types/", localName="findCustomersView1")
    @ResponseWrapper(targetNamespace="/customerapp/common/types/", localName="findCustomersView1Response")
    @WebResult(name="result")
    List<CustomersViewSDO> findCustomersView1(@WebParam(mode = WebParam.Mode.IN,
            name="findCriteria")
        FindCriteria findCriteria, @WebParam(mode = WebParam.Mode.IN, name="findControl")
        FindControl findControl) throws ServiceException;

    @WebMethod(action="/customerapp/common/processCustomersView1",
        operationName="processCustomersView1")
    @RequestWrapper(targetNamespace="/customerapp/common/types/", localName="processCustomersView1")
    @ResponseWrapper(targetNamespace="/customerapp/common/types/", localName="processCustomersView1Response")
    @WebResult(name="result")
    List<CustomersViewSDO> processCustomersView1(@WebParam(mode = WebParam.Mode.IN,
            name="changeOperation")
        String changeOperation, @WebParam(mode = WebParam.Mode.IN, name="customersView1")
        List<CustomersViewSDO> customersView1, @WebParam(mode = WebParam.Mode.IN,
            name="processControl")
        ProcessControl processControl) throws ServiceException;

    @WebMethod(action="/customerapp/common/processCSCustomersView1",
        operationName="processCSCustomersView1")
    @RequestWrapper(targetNamespace="/customerapp/common/types/", localName="processCSCustomersView1")
    @ResponseWrapper(targetNamespace="/customerapp/common/types/", localName="processCSCustomersView1Response")
    @WebResult(name="result")
    ProcessData processCSCustomersView1(@WebParam(mode = WebParam.Mode.IN,
            name="processData")
        ProcessData processData, @WebParam(mode = WebParam.Mode.IN, name="processControl")
        ProcessControl processControl) throws ServiceException;
}
